{"ast":null,"code":"import axios from 'axios';\nexport async function apiRequest(method, url, body = {}) {\n  let promise;\n\n  switch (method) {\n    case \"GET\":\n      promise = new Promise((resolve, reject) => {\n        axios.get(url).then(res => {\n          console.log(res);\n          let result = {\n            data: res.data,\n            isError: false,\n            status: res.status\n          };\n          resolve(result);\n        }).catch(err => {\n          let result = {\n            isError: true,\n            error: err\n          };\n          resolve(result);\n        });\n      });\n      return promise;\n      break;\n\n    case \"POST\":\n      break;\n\n    case \"PUT\":\n      break;\n\n    case \"DELETE\":\n      break;\n\n    default:\n      break;\n  }\n}","map":{"version":3,"sources":["/home/thinkitive/Documents/Interview Prep/Interview Demo/ShorelineP_Pravin-Shingade_ReactJs_Developer/pravin_shingade_react_assigment/src/components/common/apiRequests/index.js"],"names":["axios","apiRequest","method","url","body","promise","Promise","resolve","reject","get","then","res","console","log","result","data","isError","status","catch","err","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,eAAeC,UAAf,CAA0BC,MAA1B,EAAkCC,GAAlC,EAAuCC,IAAI,GAAG,EAA9C,EAAkD;AAErD,MAAIC,OAAJ;;AACA,UAAQH,MAAR;AACI,SAAK,KAAL;AACIG,MAAAA,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAASC,MAAT,KAAoB;AACtCR,QAAAA,KAAK,CAACS,GAAN,CAAUN,GAAV,EACCO,IADD,CACOC,GAAD,IAAS;AACXC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,cAAIG,MAAM,GAAG;AACTC,YAAAA,IAAI,EAAEJ,GAAG,CAACI,IADD;AAETC,YAAAA,OAAO,EAAE,KAFA;AAGTC,YAAAA,MAAM,EAAEN,GAAG,CAACM;AAHH,WAAb;AAKAV,UAAAA,OAAO,CAACO,MAAD,CAAP;AACH,SATD,EAUCI,KAVD,CAUQC,GAAD,IAAS;AACZ,cAAIL,MAAM,GAAG;AACTE,YAAAA,OAAO,EAAE,IADA;AAETI,YAAAA,KAAK,EAAED;AAFE,WAAb;AAIAZ,UAAAA,OAAO,CAACO,MAAD,CAAP;AACH,SAhBD;AAiBH,OAlBS,CAAV;AAmBA,aAAOT,OAAP;AACA;;AAEJ,SAAK,MAAL;AACI;;AACJ,SAAK,KAAL;AACI;;AACJ,SAAK,QAAL;AACI;;AACJ;AACI;AA/BR;AAiCH","sourcesContent":["import axios from 'axios'\n\nexport async function apiRequest(method, url, body = {}) {\n\n    let promise;\n    switch (method) {\n        case \"GET\":\n            promise = new Promise((resolve,reject) => {\n                axios.get(url)\n                .then((res) => {\n                    console.log(res);\n                    let result = {\n                        data: res.data,\n                        isError: false,\n                        status: res.status\n                    }\n                    resolve(result)\n                })\n                .catch((err) => {\n                    let result = {\n                        isError: true,\n                        error: err\n                    }\n                    resolve(result)\n                })\n            })\n            return promise;\n            break;\n            \n        case \"POST\":\n            break;\n        case \"PUT\":\n            break;\n        case \"DELETE\":\n            break;\n        default: \n            break;\n    }\n}"]},"metadata":{},"sourceType":"module"}