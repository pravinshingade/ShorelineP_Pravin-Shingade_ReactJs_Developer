{"ast":null,"code":"import { USERS_CONSTANTS } from \"./action.type\";\nimport { URLS } from \"../../../constants/urls\";\nimport { apiRequest } from \"../../../components/common/apiRequests\";\n\nconst loadRequest = payload => ({\n  type: USERS_CONSTANTS.USERS_LIST_LOAD_REQUEST,\n  payload\n});\n\nconst loadFailure = (payload = \"error\") => ({\n  type: USERS_CONSTANTS.USERS_LIST_LOAD_FAILURE,\n  payload\n});\n\nconst loadSuccess = payload => {\n  return {\n    type: USERS_CONSTANTS.USERS_LIST_LOAD_SUCCESS,\n    data: payload\n  };\n};\n\nexport const getUsersLists = (array = []) => {\n  let url = URLS.UserListURL;\n  return dispatch => {\n    dispatch(loadRequest());\n    apiRequest(\"GET\", url).then(result => {\n      if (result.isError) {\n        dispatch(loadFailure(\"Something went Worng\"));\n      } else {\n        dispatch(loadSuccess(result.data.item || []));\n      }\n    }).catch(err => {\n      dispatch(loadFailure(\"Something went Worng\"));\n    });\n  };\n};\n\nconst updateSuccess = payload => {\n  return {\n    type: USERS_CONSTANTS.USERS_LIST_UPDATE_SUCCESS,\n    data: payload\n  };\n};\n\nexport const updateUsersLists = obj => {\n  return dispatch => {\n    dispatch(updateSuccess(obj));\n  };\n};","map":{"version":3,"sources":["/home/thinkitive/Documents/Interview Prep/Interview Demo/ShorelineP_Pravin-Shingade_ReactJs_Developer/pravin_shingade_react_assigment/src/store/reducers/users/action.js"],"names":["USERS_CONSTANTS","URLS","apiRequest","loadRequest","payload","type","USERS_LIST_LOAD_REQUEST","loadFailure","USERS_LIST_LOAD_FAILURE","loadSuccess","USERS_LIST_LOAD_SUCCESS","data","getUsersLists","array","url","UserListURL","dispatch","then","result","isError","item","catch","err","updateSuccess","USERS_LIST_UPDATE_SUCCESS","updateUsersLists","obj"],"mappings":"AAAA,SAASA,eAAT,QAAgC,eAAhC;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,UAAT,QAA2B,wCAA3B;;AAEA,MAAMC,WAAW,GAAIC,OAAD,KAAc;AAChCC,EAAAA,IAAI,EAAEL,eAAe,CAACM,uBADU;AAEhCF,EAAAA;AAFgC,CAAd,CAApB;;AAIA,MAAMG,WAAW,GAAG,CAACH,OAAO,GAAG,OAAX,MAAwB;AAC1CC,EAAAA,IAAI,EAAEL,eAAe,CAACQ,uBADoB;AAE1CJ,EAAAA;AAF0C,CAAxB,CAApB;;AAIA,MAAMK,WAAW,GAAIL,OAAD,IAAa;AAC7B,SAAO;AACPC,IAAAA,IAAI,EAAEL,eAAe,CAACU,uBADf;AAEPC,IAAAA,IAAI,EAAEP;AAFC,GAAP;AAIH,CALD;;AAMA,OAAO,MAAMQ,aAAa,GAAG,CAACC,KAAK,GAAG,EAAT,KAAgB;AAC3C,MAAIC,GAAG,GAAGb,IAAI,CAACc,WAAf;AAEA,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACb,WAAW,EAAZ,CAAR;AACAD,IAAAA,UAAU,CAAC,KAAD,EAAQY,GAAR,CAAV,CACGG,IADH,CACSC,MAAD,IAAY;AAChB,UAAIA,MAAM,CAACC,OAAX,EAAoB;AAClBH,QAAAA,QAAQ,CAACT,WAAW,CAAC,sBAAD,CAAZ,CAAR;AACD,OAFD,MAEO;AACLS,QAAAA,QAAQ,CAACP,WAAW,CAACS,MAAM,CAACP,IAAP,CAAYS,IAAZ,IAAoB,EAArB,CAAZ,CAAR;AACD;AACF,KAPH,EAQGC,KARH,CAQUC,GAAD,IAAS;AACdN,MAAAA,QAAQ,CAACT,WAAW,CAAC,sBAAD,CAAZ,CAAR;AACD,KAVH;AAWD,GAbD;AAcD,CAjBM;;AAmBP,MAAMgB,aAAa,GAAInB,OAAD,IAAa;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAEL,eAAe,CAACwB,yBADjB;AAELb,IAAAA,IAAI,EAAEP;AAFD,GAAP;AAID,CALD;;AAOA,OAAO,MAAMqB,gBAAgB,GAAIC,GAAD,IAAS;AACvC,SAAQV,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACO,aAAa,CAACG,GAAD,CAAd,CAAR;AACD,GAFD;AAGD,CAJM","sourcesContent":["import { USERS_CONSTANTS } from \"./action.type\";\nimport { URLS } from \"../../../constants/urls\";\nimport { apiRequest } from \"../../../components/common/apiRequests\";\n\nconst loadRequest = (payload) => ({\n  type: USERS_CONSTANTS.USERS_LIST_LOAD_REQUEST,\n  payload,\n});\nconst loadFailure = (payload = \"error\") => ({\n  type: USERS_CONSTANTS.USERS_LIST_LOAD_FAILURE,\n  payload,\n});\nconst loadSuccess = (payload) => {\n    return {\n    type: USERS_CONSTANTS.USERS_LIST_LOAD_SUCCESS,\n    data: payload,\n  };\n};\nexport const getUsersLists = (array = []) => {\n  let url = URLS.UserListURL;\n\n  return (dispatch) => {\n    dispatch(loadRequest());\n    apiRequest(\"GET\", url)\n      .then((result) => {\n        if (result.isError) {\n          dispatch(loadFailure(\"Something went Worng\"));\n        } else {\n          dispatch(loadSuccess(result.data.item || []));\n        }\n      })\n      .catch((err) => {\n        dispatch(loadFailure(\"Something went Worng\"));\n      });\n  };\n};\n\nconst updateSuccess = (payload) => {\n  return {\n    type: USERS_CONSTANTS.USERS_LIST_UPDATE_SUCCESS,\n    data: payload\n  }\n}\n\nexport const updateUsersLists = (obj) => {\n  return (dispatch) => {\n    dispatch(updateSuccess(obj));\n  };\n};\n\n\n"]},"metadata":{},"sourceType":"module"}